Create a table Student (R_No, Name, Sub1, Sub2, Sub3, Total, Grade)

create table student(R_no number(5),Name varchar(10),sub1 number(3),sub2 number(3),sub3 number(3));

insert into student values(01,'Manav',50,59,70);

insert into student values(02,'Harsh',79,59,70);
insert into student values(03,'akshy',89,25,30);
insert into student values(04,'simmi',50,87,40);
insert into student values(05,'sanket',50,22,12);
insert into student values(06,'Diya',50,50,50);
insert into student values(07,'Disha',40,45,45);
insert into student values(08,'vikas',12,22,22);
insert into student values(09,'vanita',69,96,40);
insert into student values(10,'amisha',49,59,59);

1. Write a PLSQL block to 
				calculate and update the Total for each and every student.
declare
	cursor cstud is select * from student;
	tot number;
begin
	for varcstud in cstud
	loop
		tot := 0;
		dbms_output.put_line('Roll_no - ' || varcstud.r_no);
		dbms_output.put_line('Sub1 - ' || varcstud.sub1);
		dbms_output.put_line('Sub2 - ' || varcstud.sub2);
		dbms_output.put_line('Sub3 - ' || varcstud.sub3);
		tot := tot + varcstud.sub1 + varcstud.sub2 + varcstud.sub3;
		dbms_output.put_line('Total Marks - ' || tot);
		dbms_output.put_line('-------------------');
		update student set total = tot where r_no = varcstud.r_no;
	end loop;
end;


2. Calculate the grade of all students, based to total (>70 AA, >60 A, >50 B, >35 C, else Fail)

declare 
	cursor cstud is select * from student;
	grd varchar(5);
begin
	for varcstud in cstud
	loop
		dbms_output.put_line('total - ' || varcstud.total);
		if varcstud.total > 280 then
			grd := 'AA';
		elsif varcstud.total > 250 then
			grd := 'A';
		elsif varcstud.total > 200 then
			grd := 'B';
		elsif varcstud.total > 150 then
			grd := 'C';
		else
			grd := 'FAIL';
		end if; 
		update student set grade = grd where r_no = varcstud.r_no;
	end loop;
end;

3. Write a Cursor to find the first 3 rankers based on the total marks.

declare
 name student.name%type;
 Marks student.Total%type;
 Grade student.grade%type;
 cursor v1 is
    select name, Total, Grade from student order by total desc;
begin
 open v1;
 loop
     fetch v1 into name, Marks, Grade;
     exit when v1%rowcount > 4;
     dbms_output.put_line(lpad(name,10)||'  '||lpad(Marks,5)||'  '||lpad(Grade,5));
 end loop;
 close v1;
end;

output: 
Harsh    208      B
vanita    205      B
Manav    179      C
simmi    177      C


(II)

create table f_master(f_no number(5),fname varchar(10),salary number(10));

insert into f_master values(01,'Urja',70000);
insert into f_master values(02,'Dhaval',70000);
insert into f_master values(03,'Bhavin',90000);
insert into f_master values(04,'Nilam',80000);
insert into f_master values(05,'Jinal',15000);

1. Add a Salary and Bonus column in the Faculty_Master Table and calculate the bonus of 
each faculty of “MCA” department which is based on the 5% of their salary. If the salary in 
less than 25000, then raise the exception.


declare
	cursor c1 is select * from f_master;
	bns number(10);
	salbns number(10);
begin
	bns := 0;
	for c in c1
	loop
		dbms_output.put_line('Salary --> ' || c.salary);
			if c.salary > 25000 then
				bns := c.salary * 0.05;
			end if;
		dbms_output.put_line(bns);
		salbns := bns + c.salary;
		dbms_output.put_line(salbns);
		update f_master set bonus = salbns where f_no = c.f_no;
		commit;
		bns := 0;
	end loop;
end;


      F_NO FNAME          SALARY      BONUS
---------- ---------- ---------- ----------
         1 Urja            70000      73500
         2 Dhaval          70000      73500
         3 Bhavin          90000      94500
         4 Nilam           80000      84000
         5 Jinal           15000      15000


2. Display name of 2 faculties getting maximum bonus.
	
declare 
  name f_master.fname%type;
  bonus f_master.bonus%type;
  cursor c1 is
      Select fName, Bonus from f_master
      where bonus is not null order by bonus desc;  
Begin
   open c1;
   loop 
      fetch c1 into name, bonus;
      exit when c1%rowcount > 2;
      dbms_output.put_line('faculty name - ' || name);	
      dbms_output.put_line('Bonus - ' || bonus);
      dbms_output.put_line('---------');
   end loop;
   close c1;
end;      


faculty name - Bhavin
Bonus - 4500
---------
faculty name - Nilam
Bonus - 4000
---------

(III)
supplier (sid, sname, contactnum)
parts (pid, pname, color, unitrate)
catalog (sid, pid, qty) [primary key(sid,pid)]

create table supplier(sid number(3) primary key,sname varchar(9));

insert into supplier values(1,'manav');
insert into supplier values(2,'sanket');
insert into supplier values(3,'harsh');
insert into supplier values(4,'vanita');
insert into supplier values(5,'diya');

parts (pid, pname, color, unitrate)

create table parts(pid number(3) primary key,pname varchar(10),color varchar(10),rate number(10));
insert into parts values(1,'break','black',700);
insert into parts values(2,'liner','black',450);
insert into parts values(3,'mirror','silver',500);
insert into parts values(4,'Tier','black',900);
insert into parts values(5,'seat','white',1200);

catalog (sid, pid, qty) [primary key(sid,pid)]
create table catalog1 (sid number(3) references supplier(sid),pid number(3) references parts(pid),qty number(5));

insert into catalog1 values(1,2,200);
insert into catalog1 values(1,3,400);
insert into catalog1 values(2,1,90);
insert into catalog1 values(3,4,120);
insert into catalog1 values(3,5,28);
insert into catalog1 values(5,1,30);
	
Table :- 1

       SID SNAME        CNUMBER
---------- --------- ----------
         1 manav
         2 sanket
         3 harsh
         4 vanita
         5 diya

Table :- 2
        PID PNAME      COLOR            RATE
---------- ---------- ---------- ----------
         1 break      black             700
         2 liner      black             450
         3 mirror     silver            500
         4 Tier       black             900
         5 seat       white            1200

Table :- 3
       SID        PID        QTY
---------- ---------- ----------
         1          2        200
         1          3         50
         2          1         90
         3          4        120
         3          5         28
         5          1         30

declare
   total number;
   Grandtotal number := 0;
   name supplier.sname%type;
   Cursor c1(name supplier.sname%type) is select parts.pid, parts.Pname, qty, rate from catalog1 join parts
   on 
   parts.pid = catalog1.pid
   join supplier
   on 
   supplier.Sid = catalog1.Sid
   where Supplier.sname Like name;
begin
   name := '&Supplier_Name';
   for v1 in c1(name)
   loop
   total := v1.QTY * v1.rate;
   Grandtotal := Grandtotal + total;
   dbms_output.put_line(lpad(v1.PID,10)||lpad(v1.PNAME,10)||lpad(v1.qty,10)||lpad(v1.rate,10)||lpad(Total,10)||lpad(Grandtotal,10));
   end loop;
end;



 
		



